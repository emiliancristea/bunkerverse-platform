{
  "permissions": {
    "allow": [
      "Bash(git init:*)",
      "Bash(git remote add:*)",
      "Bash(mkdir:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git checkout:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)",
      "Bash(git reset:*)",
      "Bash(cargo init:*)",
      "Bash(git submodule:*)",
      "Bash(git branch:*)",
      "Bash(chmod:*)",
      "Bash(git config:*)",
      "Bash(cargo check:*)",
      "Bash(find:*)",
      "Bash(cargo install:*)",
      "Bash(cargo audit:*)",
      "Bash(cargo fuzz:*)",
      "Bash(timeout 30 cargo fuzz run fuzz_target_1)",
      "Bash(rustup toolchain:*)",
      "Bash(cargo:*)",
      "Bash(docker-compose:*)",
      "Bash(target/release/identity-service.exe)",
      "Bash(target/release/account-service.exe)",
      "Bash(target/release/indexer-service.exe)",
      "Bash(python:*)",
      "Bash(curl:*)",
      "Bash(bash:*)",
      "Bash(netstat:*)",
      "WebSearch",
      "Bash(set QT_DIR=D:DOCUMENTSQt6.9.2msvc2022_64)",
      "Bash(set PATH=%PATH%)",
      "Bash(set CMAKE_PREFIX_PATH=D:DOCUMENTSQt6.9.2msvc2022_64)",
      "Bash(set \"QT_DIR=D:\\DOCUMENTS\\Qt\\6.9.2\\msvc2022_64\")",
      "Bash(set \"PATH=%PATH%;D:\\DOCUMENTS\\Qt\\6.9.2\\msvc2022_64\\bin\")",
      "Bash(set \"CMAKE_PREFIX_PATH=D:\\DOCUMENTS\\Qt\\6.9.2\\msvc2022_64\")",
      "Read(//d/DOCUMENTS/Qt/6.9.2/msvc2022_64/bin/**)",
      "Bash(PATH=\"$PATH:D:/DOCUMENTS/Qt/6.9.2/msvc2022_64/bin\" QT_DIR=\"D:/DOCUMENTS/Qt/6.9.2/msvc2022_64\" CMAKE_PREFIX_PATH=\"D:/DOCUMENTS/Qt/6.9.2/msvc2022_64\" cargo build)",
      "Bash(\"D:\\DOCUMENTS\\Qt\\6.9.2\\msvc2022_64\\bin\\qmake.exe\" -query QT_VERSION)",
      "Bash(QMAKE=\"D:/DOCUMENTS/Qt/6.9.2/msvc2022_64/bin/qmake.exe\" QT_INCLUDE_PATH=\"D:/DOCUMENTS/Qt/6.9.2/msvc2022_64/include\" QT_LIBRARY_PATH=\"D:/DOCUMENTS/Qt/6.9.2/msvc2022_64/lib\" QTDIR=\"D:/DOCUMENTS/Qt/6.9.2/msvc2022_64\" cargo build)",
      "Bash(export:*)",
      "Bash(qmake:*)",
      "Bash(QMAKE=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/bin/qmake.exe\" QT_INCLUDE_PATH=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/include\" QT_LIBRARY_PATH=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/lib\" QTDIR=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64\" cargo build)",
      "Bash(QMAKE=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/bin/qmake.exe\" QT_INCLUDE_PATH=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/include\" QT_LIBRARY_PATH=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/lib\" QTDIR=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64\" cargo run)",
      "Bash(QMAKE=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/bin/qmake.exe\" QT_INCLUDE_PATH=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/include\" QT_LIBRARY_PATH=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64/lib\" QTDIR=\"/d/DOCUMENTS/Qt/6.9.2/msvc2022_64\" cargo check)",
      "Bash(git show:*)",
      "Bash(node:*)",
      "Bash(git cherry-pick:*)",
      "Bash(git pull:*)",
      "Bash(git stash:*)",
      "Bash(make proto-validate:*)",
      "Bash(sed:*)",
      "Bash(for:*)",
      "Bash(do sed -i '/^package bunkerverse.services.v1;$/a\\\\noption go_package = \"\"bunkerverse/services/v1\"\";' \"$file\")",
      "Bash(done)",
      "Bash(make:*)",
      "Bash(git fetch:*)",
      "Bash(gh pr create:*)",
      "Bash(cat:*)",
      "Bash(git clean:*)",
      "Bash(grep:*)",
      "Bash(./scripts/validate-ci-pipeline.sh:*)",
      "Bash(do touch services/$service/Dockerfile)",
      "Bash(echo:*)",
      "Bash(./scripts/create-service-dockerfiles.sh:*)",
      "Read(//d/code-dev/main/**)",
      "Bash(rustfmt:*)",
      "Bash(do [ ! -f \"$dir/Cargo.toml\" ])",
      "Bash(do echo \"=== $service ===\")",
      "Bash(RUST_LOG=info cargo run)",
      "Bash(powershell:*)",
      "Bash(docker:*)",
      "Bash(ENABLE_CRYPTO=false docker-compose up -d)",
      "Bash(do echo \"=== $module ===\")",
      "Bash(ls:*)",
      "Bash(do echo \"=== $module module ===\")",
      "Bash(terraform fmt:*)",
      "Bash(pip install:*)",
      "Bash(timeout 300 docker build -f infra/dockerfiles/feedback/Dockerfile -t test-feedback .)",
      "Bash(timeout 30s docker build:*)",
      "Bash(kubectl:*)",
      "Bash(do echo \"Checking $module:\")",
      "Bash(do echo \"=== Checking $service stub ===\")",
      "Bash(do echo \"Checking: $requirement\")",
      "Bash(if [ -f \"services/$service/Cargo.toml\" ])",
      "Bash(then grep -A5 \"\\[\\[bin\\]\\]\" \"services/$service/Cargo.toml\")",
      "Bash(else echo \"No Cargo.toml\")",
      "Bash(fi)",
      "Bash(do if [ -f \"services/$service/Dockerfile\" ])",
      "Bash(then echo \"Removing services/$service/Dockerfile\")",
      "Bash(timeout 120s docker-compose build:*)",
      "Bash(timeout 60 cargo build)",
      "Bash(timeout 300s docker build -f infra/dockerfiles/marketplace/Dockerfile -t test-marketplace .)",
      "Bash(timeout 60s cargo check --bin marketplace-service)",
      "Bash(xargs clang-format:*)"
    ],
    "deny": [],
    "ask": []
  }
}