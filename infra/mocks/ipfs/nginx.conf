# IPFS Mock Gateway - Nginx Configuration (Optional)
# This configuration can be used as a simple static file server alternative
# The primary implementation uses the Rust-based HTTP server

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # CORS headers for IPFS gateway compatibility
    add_header 'Access-Control-Allow-Origin' '*' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, HEAD, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization' always;

    server {
        listen 80;
        server_name localhost ipfs-mock;
        root /usr/share/nginx/html;
        index index.html;

        # Health check endpoint
        location /health {
            return 200 '{"status":"healthy","service":"nginx-ipfs-mock","timestamp":"$time_iso8601"}';
            add_header Content-Type application/json;
        }
        
        # IPFS Gateway simulation - serve static files
        location /ipfs/ {
            # Remove /ipfs/ prefix and serve from sample-data directory
            rewrite ^/ipfs/(.*)$ /sample-data/$1 break;
            try_files $uri $uri.json $uri.txt /sample-data/nft-metadata.json;
            
            # IPFS-specific headers
            add_header 'x-ipfs-path' '$request_uri';
            add_header 'x-ipfs-gateway-host' 'ipfs-mock-nginx';
            add_header 'cache-control' 'public, max-age=29030400, immutable';
            
            # Handle missing files gracefully
            error_page 404 = @ipfs_fallback;
        }
        
        # Fallback for IPFS content
        location @ipfs_fallback {
            return 200 '{"error":"Content not found","message":"This is a mock IPFS gateway. Content is simulated.","cid":"$uri"}';
            add_header Content-Type application/json;
        }
        
        # IPFS API v0 simulation (basic responses)
        location /api/v0/version {
            return 200 '{"Version":"0.14.0-nginx-mock","Commit":"nginx-mock","System":"nginx/alpine"}';
            add_header Content-Type application/json;
        }
        
        location /api/v0/id {
            return 200 '{"ID":"12D3KooWNginxMockNode","Addresses":["/ip4/127.0.0.1/tcp/80"],"PublicKey":"mock-key"}';
            add_header Content-Type application/json;
        }
        
        # Default location
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # Error pages
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }
}